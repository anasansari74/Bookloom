Technologies

	- C#
	- .NET 6 with Postgres for backend data storage
	- WPF for frontend development
	- MVVM design pattern, utilizing the PRISM framework (found at prismlibrary.com)
	- Adherence to SOLID principles
	- Unit testing on XUnit
	- Database normalization for efficient data storage
	- Learning resources from pluralsight.com/pricing/skills
	- Docker for containerization

-----------------------------------------------------------------------

Wireframes

	- Admin Books: 
		- Filter, edit, and add books with authorization notification.
	Admin Transactions: 
		- View and filter transactions with authorization notification.
	Admin login Modal:
		- Login form that validates admin credentials
	Customer Sales: 
		- Browse and add books to basket, with admin access option.
	Customer Basket: 
		- Manage items in basket.

## Detailed wireframes written and drawn in seperate file and directory for better organization and accessiblity

-----------------------------------------------------------------------

MVP's

	- Frontend:
		- Customer 
			- Header containing title and logo
			- Sales page
				- Books displayed in rows and columns
				- Option to filter books by name
				- Each book accompanied by a picture, title, and price
				- Add to basket button for each book
			-Modal
				- When a customer selects add to basket button, a modal will appear asking the quantity and confirmation to move to basket
			- Basket page
				- Shows all selected books and a button at the bottom whihc is confirm purchase
		
		Admin
			- Header ( containing title and and log in button )
			- Body
				- Display of all books in tabular format
				- Edit button for each book which:
					- Can only be done by the "super admin"
					- Opens book details in the same table
				- "Add Book" option at the bottom of the page
		
	- Backend:

-----------------------------------------------------------------------

Stretch goals

	- Continuous Integration/Continuous Deployment (CICD) pipeline setup.
	- Add genre's to books

-----------------------------------------------------------------------

Standards

	- Naming conventions:
		- camelCasing for parameters
		- PascalCasing for all other identifiers

